{
    "properties": {
        "template": {
            "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
                "ServiceId": {
                    "type": "string",
                    "maxLength": 4,
                    "minLength": 4,
                    "metadata": {
                        "description": "This parameters is referred to as the resource prefix and describes service names. Example: Platform(P) - Business(B)"
                    }
                },
                "EnvironmentInstanceId": {
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3,
                    "metadata": {
                        "description": "This parameters is referred to as the resource EnvironmentInstanceId which includes Env and InstanceId. Example: p01, t01"
                    }
                },
                "RoleName": {
                    "type": "string",
                    "defaultValue": "bastion",
                    "metadata": {
                        "description": "This parameters is referred to as the Role Name which will be bastion, domain controller(dc)"
                    }
                },
                "Jumpoint-local-admin-username": {
                    "type": "string",
                    "defaultValue": "jb-admin-user",
                    "metadata": {
                        "displayName": "Jumpoint admin username",
                        "description": "The username used to access jumpbox VM"
                    }
                },
                "Jumpoint-local-admin-user-password": {
                    "type": "string",
                    "metadata": {
                        "displayName": "Jumpoint admin ssh key or password",
                        "description": "Jumpbox admin user's ssh key or password"
                    }
                },
                "AccessPolicy-Object-Id": {
                    "type": "string",
                    "metadata": {
                        "displayName": "AAD object ID",
                        "description": "AAD object ID of the user that requires access to Key Vault. To retrieve this value go to Microsoft Azure Portal > Azure Active Directory > Users > (user) and copy the Userâ€™s Object ID"
                    }
                },
                "RequiredJumpboxVms": {
                    "defaultValue": true,
                    "allowedValues": [
                        true,
                        false
                    ],
                    "type": "bool"
                },
                "RemoteUserCount": {
                    "type": "string",
                    "defaultValue": "1",
                    "allowedValues": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9",
                        "10"
                    ],
                    "metadata": {
                        "description": "This parameters is referred that how many users you will have on jumpbox"
                    }
                },
                "TemporaryPassword": {
                    "type": "securestring"
                }
            },
            "variables": {
                "vNET_Info": {
                    "vNET_Name": "[toLower(concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'),'-', parameters('RoleName'),'-vn-01'))]",
                    "vNET_AddressSpace": "192.168.254",
                    "resourceGroup": "[resourceGroup().name]"
                },
                "vNET_Subnets_Info": [
                    {
                        "vNET_Subnet_Name": "[toLower(concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'),'-', parameters('RoleName'), '-sn-02'))]",
                        "vNET_Subnet_CIDR": "[concat(variables('vNET_Info').vNET_AddressSpace,'.16/28')]",
                        "vNET_Subnet_NSG": "[toLower(concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'),'-', parameters('RoleName'), '-nsg-02'))]"
                    }
                ],
                "antimalware-extension-name": "IaaSAntimalware",
                "diagnostics-extension-name": "IaaSDiagnostics",
                "networkWatcher-extension-name": "NetworkWatcher",
                "wad-logs": "<WadCfg> <DiagnosticMonitorConfiguration overallQuotaInMB=\"4096\" xmlns=\"http://schemas.microsoft.com/ServiceHosting/2010/10/DiagnosticsConfiguration\"> <DiagnosticInfrastructureLogs scheduledTransferLogLevelFilter=\"Error\"/> <WindowsEventLog scheduledTransferPeriod=\"PT1M\" > <DataSource name=\"Application!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"Security!*[System[(Level = 1 or Level = 2)]]\" /> <DataSource name=\"System!*[System[(Level = 1 or Level = 2)]]\" /></WindowsEventLog>",
                "wad-perf-counters1": "<PerformanceCounters scheduledTransferPeriod=\"PT1M\"><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Processor Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU utilization\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% Privileged Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU privileged time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor(_Total)\\% User Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"CPU user time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Processor Information(_Total)\\Processor Frequency\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"CPU frequency\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\System\\Processes\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Processes\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Thread Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Threads\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Process(_Total)\\Handle Count\" sampleRate=\"PT15S\" unit=\"Count\"><annotation displayName=\"Handles\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\% Committed Bytes In Use\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Memory usage\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Available Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory available\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Committed Bytes\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory committed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\Memory\\Commit Limit\" sampleRate=\"PT15S\" unit=\"Bytes\"><annotation displayName=\"Memory commit limit\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active time\" locale=\"en-us\"/></PerformanceCounterConfiguration>",
                "wad-perf-counters2": "<PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Read Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active read time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\% Disk Write Time\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk active write time\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Transfers/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Reads/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk read operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Writes/sec\" sampleRate=\"PT15S\" unit=\"CountPerSecond\"><annotation displayName=\"Disk write operations\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Read Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk read speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\PhysicalDisk(_Total)\\Disk Write Bytes/sec\" sampleRate=\"PT15S\" unit=\"BytesPerSecond\"><annotation displayName=\"Disk write speed\" locale=\"en-us\"/></PerformanceCounterConfiguration><PerformanceCounterConfiguration counterSpecifier=\"\\LogicalDisk(_Total)\\% Free Space\" sampleRate=\"PT15S\" unit=\"Percent\"><annotation displayName=\"Disk free space (percentage)\" locale=\"en-us\"/></PerformanceCounterConfiguration></PerformanceCounters>",
                "wad-cfgx-start": "[concat(variables('wad-logs'), variables('wad-perf-counters1'), variables('wad-perf-counters2'), '<Metrics resourceId=\"')]",
                "wad-metrics-resource-id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name , '/providers/', 'Microsoft.Compute/virtualMachines/')]",
                "wad-cfgx-end": "\"><MetricAggregation scheduledTransferPeriod=\"PT1H\"/><MetricAggregation scheduledTransferPeriod=\"PT1M\"/></Metrics></DiagnosticMonitorConfiguration></WadCfg>",
                "diagnostic-storageAccount-id": "[resourceId('Microsoft.Storage/storageAccounts/', variables('diagnostic-storageAccount-name'))]",
                "uniqueString": "[uniqueString(subscription().id, variables('virtual-machine-prefix'))]",
                "network-interface-name": "[toLower(concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'),'-', parameters('RoleName'),'-nic-01'))]",
                "diagnostic-storageAccount-name": "[replace(toLower(concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'),'-', parameters('RoleName'),'-str-01')),'-','')]",
                "virtual-machine-prefix": "[toLower(concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'),'-', parameters('RoleName'),'-vm-'))]",
                "availabilitySet-name": "[concat(variables('virtual-machine-prefix'), 'as-01')]",
                "userCountTable": {
                    "1": 1,
                    "2": 1,
                    "3": 2,
                    "4": 2,
                    "5": 3,
                    "6": 3,
                    "7": 4,
                    "8": 4,
                    "9": 5,
                    "10": 5
                },
                "subnet-id": "[concat(resourceId(variables('vNET_Info').resourceGroup, 'Microsoft.Network/virtualNetworks',  variables('vNET_Info').vNET_Name), '/subnets/', 's838d01-jumpoint-sn-02')]",
                "key-vault-name": "[concat(parameters('ServiceId'),parameters('EnvironmentInstanceId'), '-', parameters('RoleName'),'-kv-01')]",
                "secrets-object": {
                    "secrets": [
                        {
                            "secretName": "JumpointAdmin",
                            "secretValue": "[parameters('jumpoint-local-admin-username')]"
                        },
                        {
                            "secretName": "JumpointPassword",
                            "secretValue": "[parameters('jumpoint-local-admin-user-password')]"
                        }
                    ]
                },
                "access-policies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('AccessPolicy-Object-Id')]",
                        "permissions": {
                            "certificates": [
                                "All"
                            ],
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ]
                        }
                    }
                ],
                "vault-sku": "Premium"
            },
            "resources": [
                {
                    "type": "Microsoft.KeyVault/vaults",
                    "name": "[variables('key-vault-name')]",
                    "apiVersion": "2016-10-01",
                    "location": "[resourceGroup().location]",
                    "tags": {
                        "displayName": "[variables('key-vault-name')]"
                    },
                    "properties": {
                        "enabledForDeployment": true,
                        "enabledForTemplateDeployment": true,
                        "enabledForDiskEncryption": true,
                        "tenantId": "[subscription().tenantId]",
                        "accessPolicies": "[variables('access-policies')]",
                        "sku": {
                            "name": "[variables('vault-sku')]",
                            "family": "A"
                        }
                    },
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults/providers/diagnosticsettings",
                            "name": "[concat(variables('key-vault-name'), '/Microsoft.Insights/service')]",
                            "apiVersion": "2016-09-01",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [
                                "[concat('Microsoft.KeyVault/vaults/', variables('key-vault-name'))]"
                            ],
                            "properties": {
                                "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name'))]",
                                "logs": [
                                    {
                                        "category": "AuditEvent",
                                        "enabled": true,
                                        "retentionPolicy": {
                                            "enabled": true,
                                            "days": 365
                                        }
                                    }
                                ],
                                "metrics": [
                                    {
                                        "category": "AllMetrics",
                                        "enabled": true,
                                        "retentionPolicy": {
                                            "enabled": true,
                                            "days": 365
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                },
                {
                    "type": "Microsoft.KeyVault/vaults/secrets",
                    "name": "[concat(variables('key-vault-name'), '/', variables('secrets-object').secrets[copyIndex()].secretName)]",
                    "apiVersion": "2015-06-01",
                    "properties": {
                        "value": "[variables('secrets-object').secrets[copyIndex()].secretValue]"
                    },
                    "dependsOn": [
                        "[concat('Microsoft.KeyVault/vaults/', variables('key-vault-name'))]"
                    ],
                    "copy": {
                        "name": "secretsCopy",
                        "count": "[length(variables('secrets-object').secrets)]"
                    }
                },
                {
                    "type": "Microsoft.Network/networkInterfaces",
                    "name": "[concat(variables('network-interface-name'),'-vm-',padleft(add(copyindex(),1),2,'0'))]",
                    "apiVersion": "2016-03-30",
                    "location": "[resourceGroup().location]",
                    "copy": {
                        "name": "nicLoop",
                        "count": "[variables('userCountTable')[parameters('RemoteUserCount')]]"
                    },
                    "properties": {
                        "ipConfigurations": [
                            {
                                "name": "ipconfig1",
                                "properties": {
                                    "privateIPAllocationMethod": "Dynamic",
                                    "subnet": {
                                        "id": "[variables('subnet-id')]"
                                    }
                                }
                            }
                        ]
                    },
                    "condition": "[parameters('RequiredJumpboxVms')]"
                },
                {
                    "type": "Microsoft.Compute/availabilitySets",
                    "apiVersion": "2016-04-30-preview",
                    "name": "[variables('availabilitySet-name')]",
                    "location": "[resourceGroup().location]",
                    "sku": {
                        "name": "Aligned"
                    },
                    "properties": {
                        "platformFaultDomainCount": 2,
                        "platformUpdateDomainCount": 5,
                        "managed": true
                    },
                    "condition": "[parameters('RequiredJumpboxVms')]"
                },
                {
                    "type": "Microsoft.Compute/virtualMachines",
                    "name": "[concat(variables('virtual-machine-prefix'), padleft(add(copyindex(),1),2,'0'))]",
                    "apiVersion": "2017-03-30",
                    "location": "[resourceGroup().location]",
                    "copy": {
                        "name": "VMcopy",
                        "count": "[variables('userCountTable')[parameters('RemoteUserCount')]]"
                    },
                    "properties": {
                        "hardwareProfile": {
                            "vmSize": "Standard_DS2_v2"
                        },
                        "storageProfile": {
                            "imageReference": {
                                "publisher": "MicrosoftWindowsServer",
                                "offer": "WindowsServer",
                                "sku": "2016-Datacenter",
                                "version": "latest"
                            },
                            "osDisk": {
                                "name": "[toLower(concat(variables('virtual-machine-prefix'),padleft(add(copyindex(),1),2,'0'),'-os-disk-01'))]",
                                "createOption": "FromImage",
                                "managedDisk": {
                                    "storageAccountType": "Premium_LRS"
                                },
                                "caching": "ReadWrite"
                            }
                        },
                        "osProfile": {
                            "computerName": "[substring(concat(variables('virtual-machine-prefix'), padleft(add(copyindex(),1),2,'0')),14)]",
                            "adminUsername": "[parameters('Jumpoint-local-admin-username')]",
                            "windowsConfiguration": {
                                "provisionVMAgent": true
                            },
                            "secrets": [
                            ],
                            "adminPassword": "[parameters('Jumpoint-local-admin-user-password')]"
                        },
                        "networkProfile": {
                            "networkInterfaces": [
                                {
                                    "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('network-interface-name'),'-vm-',padleft(add(copyindex(),1),2,'0')))]"
                                }
                            ]
                        },
                        "availabilitySet": {
                            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySet-name'))]"
                        },
                        "diagnosticsProfile": {
                            "bootDiagnostics": {
                                "enabled": true,
                                "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnostic-storageAccount-name')), '2016-01-01').primaryEndpoints.blob]"
                            }
                        }
                    },
                    "dependsOn": [
                        "[variables('availabilitySet-name')]",
                        "[variables('key-vault-name')]",
                        "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('network-interface-name'),'-vm-',padleft(add(copyindex(),1),2,'0')))]"
                    ]
                    /*
                    "resources": [
                        {
                            "type": "extensions",
                            "apiVersion": "2017-03-30",
                            "name": "[variables('antimalware-extension-name')]",
                            "location": "[resourceGroup().location]",
                             "dependsOn": [
                                "[resourceId('Microsoft.Compute/virtualMachines', variables('virtual-machine-prefix'), padleft(add(copyindex(),1),2,'0'))]"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Azure.Security",
                                "type": "IaaSAntimalware",
                                "typeHandlerVersion": "1.5",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "AntimalwareEnabled": true,
                                    "RealtimeProtectionEnabled": "true",
                                    "ScheduledScanSettings": {
                                        "isEnabled": "true",
                                        "scanType": "Quick",
                                        "day": "7",
                                        "time": "120"
                                    }
                                }
                            },
                            "condition": "[parameters('RequiredJumpboxVms')]"
                        },
                        {
                            "type": "extensions",
                            "apiVersion": "2017-03-30",
                            "name": "[variables('networkWatcher-extension-name')]",
                             "dependsOn": [
                                 "[resourceId('Microsoft.Compute/virtualMachines', variables('virtual-machine-prefix'), padleft(add(copyindex(),1),2,'0'))]"
                            ],
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "publisher": "Microsoft.Azure.NetworkWatcher",
                                "type": "NetworkWatcherAgentWindows",
                                "typeHandlerVersion": "1.4",
                                "autoUpgradeMinorVersion": true
                            },
                            "condition": "[parameters('RequiredJumpboxVms')]"
                        },
                        {
                            "type": "extensions",
                            "apiVersion": "2017-03-30",
                            "name": "[variables('diagnostics-extension-name')]",
                            "location": "[resourceGroup().location]",
                             "dependsOn": [
                                 "[resourceId('Microsoft.Compute/virtualMachines', variables('virtual-machine-prefix'), padleft(add(copyindex(),1),2,'0'))]"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Azure.Diagnostics",
                                "type": "IaaSDiagnostics",
                                "typeHandlerVersion": "1.5",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "xmlCfg": "[base64(concat(variables('wad-cfgx-start'), variables('wad-metrics-resource-id'), variables('virtual-machine-prefix'), variables('wad-cfgx-end')))]",
                                    "storageAccount": "[variables('diagnostic-storageAccount-name')]"
                                },
                                "protectedSettings": {
                                    "storageAccountName": "[variables('diagnostic-storageAccount-name')]",
                                    "storageAccountKey": "[listkeys(variables('diagnostic-storageAccount-id'), '2016-12-01').keys[0])",
                                    "storageAccountEndPoint": "https://core.windows.net"
                                }
                            },
                            "condition": "[parameters('RequiredJumpboxVms')]"
                        }
                    ]
                    */
                }
            ],
            "outputs": {
            }
        },
        "parameters": {
            "ServiceId": {
                "value": "[parameters('ServiceId')]"
            },
            "EnvironmentInstanceId": {
                "value": "[parameters('EnvironmentInstanceId')]"
            },
            "RoleName": {
                "value": "[parameters('x-Bastion_RoleName')]"
            },
            "Jumpoint-local-admin-username": {
                "value": "[parameters('x-VirtualMachines_Jumpoint-local-admin-username')]"
            },
            "Jumpoint-local-admin-user-password": {
                "value": "[parameters('x-VirtualMachines_Jumpoint-local-admin-user-password')]"
            },
            "AccessPolicy-Object-Id": {
                "value": "[parameters('x-VirtualMachines_AccessPolicy-Object-Id')]"
            },
            "RemoteUserCount": {
                "value": "[parameters('x-Function_HowManyUsersRequired')]"
            },
            "RequiredJumpboxVms": {
                "value": "[parameters('x-VirtualMachines_RequiredJumpboxVms')]"
            },
            "TemporaryPassword": {
                "value": "[parameters('x-VirtualMachines_TemporaryPassword')]"
            }
        },
        "dependsOn": [],
        "resourceGroup": "xBastionResourceGroup",
        "displayName": "Provisioning Jumpoint VMs for Bastion Host",
        "description": ""
    },
    "kind": "template",
    "type": "Microsoft.Blueprint/blueprints/artifacts"
}